services:
  accounts-service-db:
    image: postgres:latest
    container_name: accounts_service_db_container
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
      POSTGRES_DB: accounts_service_db
    ports:
      - "5430:5432"

  accounts-service:
    container_name: accounts-service
    build:
      context: ./accounts-service
      dockerfile: Dockerfile
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://accounts-service-db:5432/accounts_service_db
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CLIENT_SECRET=${ACCOUNTS_SERVICE_CLIENT_SECRET}
    ports:
      - "9001:9001"
    depends_on:
      - accounts-service-db

  blocker-service:
    container_name: blocker-service
    build:
      context: ./blocker-service
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
    ports:
      - "9008:9008"

  cash-service:
    container_name: cash-service
    build:
      context: ./cash-service
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CLIENT_SECRET=${CASH_SERVICE_CLIENT_SECRET}
    ports:
      - "9002:9002"

  exchange-generator-service:
    container_name: exchange-generator-service
    build:
      context: ./exchange-generator-service
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CLIENT_SECRET=${EXCHANGE_GENERATOR_SERVICE_CLIENT_SECRET}
    ports:
      - "9007:9007"

  exchange-service:
    container_name: exchange-service
    build:
      context: ./exchange-service
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
    ports:
      - "9003:9003"

  front-ui:
    container_name: front-ui
    build:
      context: ./front-ui
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CLIENT_SECRET=${FRONT_UI_SERVICE_CLIENT_SECRET}
    ports:
      - "9000:9000"

  notification-service:
    container_name: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
    ports:
      - "9009:9009"

  transfer-service:
    container_name: transfer-service
    build:
      context: ./transfer-service
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CLIENT_SECRET=${TRANSFER_SERVICE_CLIENT_SECRET}
    ports:
      - "9004:9004"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=keycloak
    ports:
      - "8080:8080"
    command:
      - start-dev

  keycloak-config-loader:
    build:
      context: ./.docker/keycloak-config-loader
      dockerfile: Dockerfile
    container_name: keycloak-config-loader
    volumes:
      - ./.docker:/docker
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_REALM=master
    entrypoint: [ ]
    command: >
      /bin/sh -c "
      echo 'Ожидание готовности Keycloak...' &&
      while ! curl -s http://keycloak:8080; do
        sleep 5;
      done &&
      echo 'Keycloak готов - начинаем конфигурацию' &&
      echo 'Загрузка скоупов...' &&
      sh /app/scripts/upload-scopes-to-keycloak.sh &&
      echo 'Загрузка клиентов...' &&
      sh /app/scripts/upload-clients-to-keycloak.sh"
    depends_on:
      - keycloak

  kafka:
    container_name: kafka
    image: apache/kafka:4.0.0
    ports:
      - 9092:9092     # для Kafka UI внутри Docker
      - 29092:29092   # для доступа из локального приложения
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - kafka-net

networks:
  kafka-net: