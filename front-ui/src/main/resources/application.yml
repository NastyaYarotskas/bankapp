server:
  port: 9000

account:
  service:
    url: ${ACCOUNT_SERVICE_URL:http://localhost:9001}
cash:
  service:
    url: ${CASH_SERVICE_URL:http://localhost:9002}
exchange:
  service:
    url: ${EXCHANGE_SERVICE_URL:http://localhost:9003}
transfer:
  service:
    url: ${TRANSFER_SERVICE_URL:http://localhost:9004}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      probes:
        enabled: true
  tracing:
    enabled: true

spring:
  application:
    name: front-ui
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/master
        registration:
          front-ui-client:
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: front-ui-client
            client-secret: ${CLIENT_SECRET:LLtTlDhsJJ2lfN5c0oHtcb0zdLQyvkXQ}
            scope: exchange.read,accounts.read,accounts.write,cash.write,transfer.write
            clientAuthenticationMethod: client_secret_post

  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL:http://127.0.0.1:9411}/api/v2/spans # Эндпоинт Zipkin для приёма спанов
  tracing:
    sampling:
      probability: 1 # Сэмплируем все запросы

logging:
  level:
    org.springframework.web.reactive.function.client.ExchangeFunctions: DEBUG
    org.springframework.web.reactive.function.client.ExchangeFilterFunction: DEBUG
    reactor.netty.http.client: DEBUG