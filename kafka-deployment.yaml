apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helm-sa
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: helm-cluster-role
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: helm-cluster-binding
subjects:
  - kind: ServiceAccount
    name: helm-sa
    namespace: kafka
roleRef:
  kind: ClusterRole
  name: helm-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-values
  namespace: kafka
data:
  values.yaml: |
    replicaCount: 2

    listeners:
      client:
        protocol: PLAINTEXT
  
    allowPlaintextListener: true
  
    externalAccess:
      enabled: false
  
    zookeeper:
      enabled: true
      replicaCount: 1
      persistence:
        enabled: true
        storageClass: "standard"
        size: 5Gi
  
    auth:
      enabled: false
  
    podAntiAffinityPreset: soft

    persistence:
      enabled: true
      storageClass: "standard"
      size: 8Gi

---
apiVersion: batch/v1
kind: Job
metadata:
  name: install-kafka
  namespace: kafka
spec:
  template:
    spec:
      serviceAccountName: helm-sa
      containers:
        - name: helm
          image: lachlanevenson/k8s-helm:latest
          command: ["sh", "-c"]
          args:
            - |
              echo "===== Helm values =====" && \
              cat /config/values.yaml && \
              helm repo add bitnami https://charts.bitnami.com/bitnami && \
              helm repo update && \
              helm install kafka bitnami/kafka -n kafka -f /config/values.yaml
          volumeMounts:
            - name: config-volume
              mountPath: /config
      restartPolicy: OnFailure
      volumes:
        - name: config-volume
          configMap:
            name: kafka-values
